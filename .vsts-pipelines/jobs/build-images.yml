parameters:
  name: null
  pool: {}
  matrix: {}
  dockerClientOS: null
  useRemoteDockerServer: false

jobs:
- job: ${{ parameters.name }}
  condition: and(succeeded(), ${{ parameters.matrix }})
  dependsOn: GenerateBuildMatrix
  pool: ${{ parameters.pool }}
  strategy:
    matrix: $[ ${{ parameters.matrix }} ]
  timeoutInMinutes: 180
  variables:
    ${{ if eq(variables['System.TeamProject'], 'internal') }}:
      imageBuilderBuildArgs: >
        --registry-override $(acr.server)
        --repo-prefix $(publishRepoPrefix)
        --push
        --username $(acr.userName)
        --password $(BotAccount-dotnet-docker-acr-bot-password)
        $(imageBuilder.queueArgs)
    ${{ if eq(variables['System.TeamProject'], 'public') }}:
      imageBuilderBuildArgs: $(imageBuilder.queueArgs)
  steps:
  - template: ${{ format('../steps/init-docker-{0}.yml', parameters.dockerClientOS) }}
    parameters:
      setupRemoteDockerServer: ${{ parameters.useRemoteDockerServer }}
  - script: >
      $(runImageBuilderCmd) build
      --manifest manifest.json
      $(imageBuilderPaths)
      --os-type $(osType)
      --os-version "$(osVersion)"
      --architecture $(architecture)
      --retry
      $(imageBuilderBuildArgs)
    displayName: Build Images
  - template: ${{ format('../steps/cleanup-docker-{0}.yml', parameters.dockerClientOS) }}
    parameters:
      cleanupRemoteDockerServer: ${{ parameters.useRemoteDockerServer }}
