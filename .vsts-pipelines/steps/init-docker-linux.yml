parameters:
  setupRemoteDockerServer: false
  setupImageBuilder: true
  cleanupDocker: true

steps:
  ################################################################################
  # Cleanup Docker Resources
  ################################################################################
- ${{ if eq(parameters.cleanupDocker, 'true') }}:
  - template: cleanup-docker-linux.yml
    parameters:
      cleanupRemoteDockerServer: ${{ parameters.setupRemoteDockerServer }}
      initCleanup: true

  ################################################################################
  # Setup Remote Docker Server (Optional)
  ################################################################################
- ${{ if eq(parameters.setupRemoteDockerServer, 'true') }}:
  - script: >
      echo "##vso[task.setvariable variable=dockerArmRunArgs]
      -v $(DOCKER_CERT_PATH):/docker-certs
      -e DOCKER_CERT_PATH=/docker-certs
      -e DOCKER_TLS_VERIFY=1
      -e DOCKER_HOST=tcp://$(DOCKER_HOST_IP):2376"
    displayName: Define dockerArmRunArgs Variable

  ################################################################################
  # Setup Image Builder (Optional)
  ################################################################################
- ${{ if eq(parameters.setupImageBuilder, 'true') }}:
  - script: $(Build.Repository.LocalPath)/scripts/pull-image.sh $(imageNames.imageBuilder.linux)
    displayName: Pull Image Builder
  - script: >
      docker build
      -t $(imageNames.imageBuilder.withrepo)
      --build-arg IMAGE=$(imageNames.imageBuilder.linux)
      -f ./scripts/Dockerfile.WithRepo .
    displayName: Build Image for Image Builder
  - script: >
      echo "##vso[task.setvariable variable=runImageBuilderCmd]
      docker run --rm
      -v /var/run/docker.sock:/var/run/docker.sock
      -w /repo
      $(dockerArmRunArgs)
      $(dockerRunOptions)
      $(imageNames.imageBuilder.withrepo)"
    displayName: Define runImageBuilderCmd Variable
  - ${{ if eq(parameters.setupRemoteDockerServer, 'true') }}:
    - script: echo "##vso[task.setvariable variable=dockerClientImage]$(imageNames.imageBuilder.withrepo)"
      displayName: Define dockerClientImage Variable
